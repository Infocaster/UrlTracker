trigger:
  branches:
    include:
    - v8/main
    - v8/develop
    - v8/release/*
    - v8/hotfix
  tags:
    include:
    - 5.*

pool:
  name: Default

variables: 
  BuildConfiguration: 'release'
  BuildPlatform: 'any cpu'
  Solution: '**\*.sln'

stages:
- stage: build
  displayName: Build
  jobs:
  - job: build
    displayName: Build
    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 5.8'
      inputs:
        versionSpec: 5.8

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: '$(Solution)'
        feedsToUse: config
        nugetConfigPath: nuget.config
                
    - task: GitVersion@5
      displayName: GitVersion
      inputs:
        configFilePath: GitVersion.yml
        updateAssemblyInfo: true

    - task: VSBuild@1
      displayName: 'Build solution **\*.sln'
      inputs:
        solution: '$(Solution)'
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'

    - task: VSTest@2
      displayName: 'Run tests'
      inputs:
        testAssemblyVer2: |
         **\$(BuildConfiguration)\*.tests.dll
         !**\obj\**
        codeCoverageEnabled: true
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'
        runSettingsFile: '.runsettings'

    - task: NuGetCommand@2
      displayName: 'NuGet pack'
      inputs:
        command: pack
        packagesToPack: UrlTracker.nuspec
        packDestination: $(build.artifactstagingdirectory)
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'Gitversion.NuGetVersion'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: release
  displayName: Release
  dependsOn: build
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
  jobs:
  - job: release
    displayName: Push to artifacts
    workspace:
      clean: all
    steps:
    - checkout: none
    - download: current
      patterns: '**/*.nupkg'
      displayName: Download build artifact
    - task: NuGetCommand@2
      displayName: 'NuGet push'
      inputs:
        command: push
        publishVstsFeed: '3356baca-d7d8-497c-a5fa-ebd93f79f7c7'
        packagesToPush: '$(Pipeline.Workspace)/drop/*.nupkg'
